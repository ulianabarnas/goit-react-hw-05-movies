{"version":3,"file":"static/js/186.f71633c8.chunk.js","mappings":"oOAIe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,IAZAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeH,GACdI,MAAK,SAAAC,GACFN,EAAS,MACTF,EAAWQ,EAAKC,QACnB,IACAC,OAAM,SAAAT,GACHC,EAASD,GACTD,EAAW,KACd,GACJ,GAAE,CAACG,IAECJ,EAIL,OACI,2BACKE,IAAS,yDAEW,KAAb,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASY,SACP,sEAEC,+BACKZ,QADL,IACKA,OADL,EACKA,EAASa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACV,2BACI,0BAAG,mCAAH,IAAmBD,MACnB,uBAAIC,MAFCD,EADC,QAUjC,C,uJC5CD,IAAME,EAAW,+BACXC,EAAM,mCAEL,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAAOT,MAC7D,SAAAY,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAoBC,GAClC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAoCT,EAApC,oBAA0DT,MACpE,SAAAY,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASG,EAAYD,GAC1B,OAAOP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASjB,EAAemB,GAC7B,OAAOP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVT,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAgBC,GAC9B,OAAOV,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,iCACsDY,IAChErB,MAAK,SAAAY,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getReviewsById } from \"services/api\";\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState(null);\n    const [error, setError] = useState(null);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getReviewsById(movieId)\n        .then(data => {\n            setError(null);\n            setReviews(data.results);\n        })\n        .catch(error => {\n            setError(error);\n            setReviews(null);\n        });\n    }, [movieId]);\n\n    if (!reviews) {\n        return;\n    };\n\n    return (\n        <div>\n            {error && <p>Something go wrong. Try again</p>}\n\n            {reviews?.length === 0\n            ? (<p>We don't have any reviews for this movie.</p>)\n            : (\n                <ul>\n                    {reviews?.map(({ author, content }) => (\n                        <li key={author}>\n                            <p><b>Author:</b> {author}</p>\n                            <p>{content}</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'cb3a4c8f64515db00f59416b4e7a67de';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getMovieDetailsById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getCastById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getReviewsById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getMovieByQuery(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["Reviews","useState","reviews","setReviews","error","setError","movieId","useParams","useEffect","getReviewsById","then","data","results","catch","length","map","author","content","BASE_URL","KEY","getTrendingMovies","fetch","response","ok","Error","status","json","getMovieDetailsById","id","getCastById","getMovieByQuery","query"],"sourceRoot":""}