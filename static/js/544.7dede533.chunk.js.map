{"version":3,"file":"static/js/544.7dede533.chunk.js","mappings":"uMAGaA,GAAUC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,iO,SCCL,SAASE,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACR,yBACI,SAACT,EAAD,CAASU,GAAE,kBAAaD,GAAME,MAAO,CAACC,KAAMP,GAA5C,SACKG,KAFAC,EADD,KASvB,C,oHCdc,SAASI,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MACKC,MAAK,SAAAC,GACFJ,EAAS,MACTF,EAAUM,EAAKC,QAClB,IACAC,OAAM,SAAAP,GACHC,EAASD,GACTD,EAAU,GACb,GACR,GAAE,KAGC,6BACI,2CACCC,IAAS,8CACTZ,EAAOoB,OAAS,IAAK,SAAC,IAAD,CAAWpB,OAAQA,MAGpD,C,uJC3BD,IAAMqB,EAAW,+BACXC,EAAM,mCAEL,SAASP,IACd,OAAOQ,MAAM,GAAD,OAAIF,EAAJ,wCAA4CC,IAAON,MAC7D,SAAAQ,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAoBxB,GAClC,OAAOkB,MAAM,GAAD,OAAIF,EAAJ,kBAAsBhB,EAAtB,oBAAoCiB,EAApC,oBAA0DN,MACpE,SAAAQ,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASE,EAAYzB,GAC1B,OAAOkB,MAAM,GAAD,OACPF,EADO,kBACWhB,EADX,4BACiCiB,EADjC,oBAEVN,MAAK,SAAAQ,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAe1B,GAC7B,OAAOkB,MAAM,GAAD,OACPF,EADO,kBACWhB,EADX,4BACiCiB,EADjC,oBAEVN,MAAK,SAAAQ,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAgBC,GAC9B,OAAOV,MAAM,GAAD,OACPF,EADO,iCAC0BC,EAD1B,iCACsDW,IAChEjB,MAAK,SAAAQ,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/MovieList/MovieList.styled..jsx","components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const NavItem = styled(Link)`\n    font-size: 18px;\n    line-height: 1.5;\n    padding: 8px;\n    color: black;\n    text-decoration: none;\n\n    &:hover,\n    &:focus {\n        font-weight: 700;\n        color: #ff4500;\n    }\n`;","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { NavItem } from \"./MovieList.styled.\";\n\nexport default function MovieList({ movies }) {\n    const location = useLocation();\n\n    return (\n        <ul>\n            {movies.map(({ title, id }) => (\n                <li key={id}>\n                    <NavItem to={`/movies/${id}`} state={{from: location}}>\n                        {title}\n                    </NavItem>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nMovieList.propTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title:PropTypes.string.isRequired,\n  })\n).isRequired;","import { useState, useEffect } from \"react\";\nimport { getTrendingMovies } from \"services/api\";\nimport MovieList from \"components/MovieList/MovieList\";\n\nexport default function Home() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getTrendingMovies()\n            .then(data => {\n                setError(null);\n                setMovies(data.results);\n            })\n            .catch(error => {\n                setError(error);\n                setMovies([]);\n            });\n    }, []);\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {error && <p>Movie loading fail</p>}\n            {movies.length > 0 && <MovieList movies={movies} />}\n        </main>\n    );\n};\n\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'cb3a4c8f64515db00f59416b4e7a67de';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getMovieDetailsById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getCastById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getReviewsById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getMovieByQuery(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["NavItem","styled","Link","MovieList","movies","location","useLocation","map","title","id","to","state","from","Home","useState","setMovies","error","setError","useEffect","getTrendingMovies","then","data","results","catch","length","BASE_URL","KEY","fetch","response","ok","Error","status","json","getMovieDetailsById","getCastById","getReviewsById","getMovieByQuery","query"],"sourceRoot":""}