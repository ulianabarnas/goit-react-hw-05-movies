{"version":3,"file":"static/js/736.f0270d11.chunk.js","mappings":"sOAEaA,E,OAAOC,GAAAA,GAAH,gH,kBCIF,SAASC,IACpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEOC,GAAWC,EAAAA,EAAAA,MAAXD,QAcP,IAZAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAYH,GACXI,MAAK,SAAAC,GACFN,EAAS,MACTF,EAAQQ,EAAKT,KAChB,IACAU,OAAM,SAAAR,GACHC,EAASD,GACTD,EAAQ,KACX,GACJ,GAAE,CAACG,IAEgB,IAAhBJ,EAAKW,OAIT,OACI,2BACKT,IAAS,0DAEV,SAACN,EAAD,UACKI,EAAKY,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACpBC,EAASD,EAAY,yCAAqCA,GAAiBE,EAEjF,OACI,2BACI,gBAAKC,IAAKF,EAAQG,IAAKN,EAAMO,MAAM,SACnC,uBAAIP,KACJ,0BAAG,sCAAH,IAAsBC,OAHjBD,EAMhB,QAIhB,C,uJC/CD,IAAMQ,EAAW,+BACXC,EAAM,mCAEL,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIH,EAAJ,wCAA4CC,IAAOd,MAC7D,SAAAiB,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAASC,EAAoBC,GAClC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAoCT,EAApC,oBAA0Dd,MACpE,SAAAiB,GACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEJ,CAEM,SAAStB,EAAYwB,GAC1B,OAAOP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVd,MAAK,SAAAiB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASG,EAAeD,GAC7B,OAAOP,MAAM,GAAD,OACPH,EADO,kBACWU,EADX,4BACiCT,EADjC,oBAEVd,MAAK,SAAAiB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,CAEM,SAASI,EAAgBC,GAC9B,OAAOV,MAAM,GAAD,OACPH,EADO,iCAC0BC,EAD1B,iCACsDY,IAChE1B,MAAK,SAAAiB,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GACF,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 12px;\n`","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getCastById } from \"services/api\";\nimport { List } from \"./Cast.styled\";\nimport defaultPhoto from '../../images/default-photo.jpg'\n\nexport default function Cast() {\n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        getCastById(movieId)\n        .then(data => {\n            setError(null);\n            setCast(data.cast)\n        })\n        .catch(error => {\n            setError(error);\n            setCast(null);\n        });\n    }, [movieId]);\n\n    if (cast.length === 0) {\n        return;\n    };\n\n    return (\n        <div>\n            {error && <p>Something go wrong. Try again</p>} \n            \n            <List>\n                {cast.map(({ name, character, profile_path }) => {\n                    const imgSrc = profile_path ? `https://image.tmdb.org/t/p/w200${profile_path}` : defaultPhoto;\n\n                    return (\n                        <li key={name}>\n                            <img src={imgSrc} alt={name} width=\"200\"/>\n                            <p>{name}</p>\n                            <p><b>Character:</b> {character}</p>\n                        </li>\n                    )\n                })}\n            </List>\n        </div>\n    );\n};\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'cb3a4c8f64515db00f59416b4e7a67de';\n\nexport function getTrendingMovies() {\n  return fetch(`${BASE_URL}/trending/movie/week?api_key=${KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getMovieDetailsById(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nexport function getCastById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getReviewsById(id) {\n  return fetch(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n\nexport function getMovieByQuery(query) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n"],"names":["List","styled","Cast","useState","cast","setCast","error","setError","movieId","useParams","useEffect","getCastById","then","data","catch","length","map","name","character","profile_path","imgSrc","defaultPhoto","src","alt","width","BASE_URL","KEY","getTrendingMovies","fetch","response","ok","Error","status","json","getMovieDetailsById","id","getReviewsById","getMovieByQuery","query"],"sourceRoot":""}